---
- name: Provision VMs
  hosts: localhost
  user: fullpower
  become: yes
  gather_facts: yes

  vars:
    base_image_name: debian-12-generic-amd64-20240717-1811.qcow2
    base_image_url: https://cloud.debian.org/images/cloud/bookworm/20240717-1811/{{ base_image_name }}
    base_image_sha: 9ce1ce8c0f16958dd07bce6dd44d12f4d44d12593432a3a8f7c890c262ce78b0402642fa25c22941760b5a84d631cf81e2cb9dc39815be25bf3a2b56388504c6
    libvirt_pool_dir: "/var/lib/libvirt/images"
    vm_vcpus: 2
    vm_ram_mb: 2048
    vm_net: bridged-network
    vm_root_pass: "test123"
    ssh_key: "{{ inventory_dir }}/files/PublicKeys/id_rsa-tsubasaadmin.pub"
    lvm_names:
      vm1:
        name: DockerWorker1
        ip: 192.168.101.10
      vm2:
        name: DockerWorker2
        ip: 192.168.101.11
      vm3:
        name: DockerWorker3
        ip: 192.168.101.12
      vm4:
        name: DockerWorker4
        ip: 192.168.101.13
      vm5:
        name: DockerManager1
        ip: 192.168.101.20
      vm6:
        name: DockerManager2
        ip: 192.168.101.21

  tasks:
    - name: Requieriments of Debian
      package:
        name:
          - libguestfs-tools
          - python3-libvirt
          - python3-lxml
        state: present

    - name: Verify to image exist
      stat:
       path: "/tmp/{{ base_image_name }}"
      register: descarga

    - name: Download base image
      get_url:
        url: "{{ base_image_url }}"
        dest: "/tmp/{{ base_image_name }}"
        checksum: "sha512:{{ base_image_sha }}"
      when: descarga.stat.exists == False

    - name: Copy base image to libvirt directory
      copy:
        dest: "{{ libvirt_pool_dir }}/{{ item.name }}.qcow2"
        src: "/tmp/{{ base_image_name }}"
        force: no
        remote_src: yes 
        mode: 0660
      loop: "{{ lvm_names.values() }}"

    - name: Configure the image
      command: |
        virt-customize -a {{ libvirt_pool_dir }}/{{ item.name }}.qcow2 \
        --hostname {{ item.name }} \
        --root-password password:{{ vm_root_pass }} \
        --ssh-inject 'root:file:{{ ssh_key }}' \
      loop: "{{ lvm_names.values() }}"

    - name: Create Custom network template for cloud-init
      template:
        src: templates/custom-network.j2
        dest: "/tmp/{{ item.name }}-custom-network"
      loop: "{{ lvm_names.values() }}"

    - name: Inject cloud-init data to config network
      command: >
        virt-customize -a {{ libvirt_pool_dir }}/{{ item.name }}.qcow2
        --upload /tmp/{{ item.name }}-custom-network:/etc/netplan/01-network.yaml
      loop: "{{ lvm_names.values() }}"


    - name: Define vm
      community.libvirt.virt:
        command: define
        xml: "{{ lookup('template', 'templates/vm-template.xml.22.j2') }}"
      loop: "{{ lvm_names.values() }}"

    - name: Create VM
      community.libvirt.virt:
        name: "{{ item.name }}"
        state: running
      loop: "{{ lvm_names.values() }}"

    - name: Import Playbook to Config SSH
      import_tasks: playbooks/21-ConfigSshService.yml



    # - name: Ensure temporary file is deleted
    #   file:
    #     path: "/tmp/{{ base_image_name }}"
    #     state: absent
    #   when: cleanup_tmp | bool